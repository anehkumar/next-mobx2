{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/var/www/html/aneh/next-by-aneh/component/Company.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { inject, observer } from 'mobx-react';\nexport let Company = (_dec = inject('CompanyStore'), _dec(_class = observer(_class = (_temp = class Company extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveCompany = e => {\n      e.preventDefault();\n      Console.log(\"called\", this.state.name);\n    };\n\n    this.state = {\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.saveCompany = this.saveCompany.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      CompanyStore\n    } = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Company: \", CompanyStore.companyCount), __jsx(\"form\", {\n      onSubmit: e => this.saveCompany(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Add Company\")));\n  }\n\n}, _temp)) || _class) || _class);","map":{"version":3,"sources":["/var/www/html/aneh/next-by-aneh/component/Company.js"],"names":["React","Link","inject","observer","Company","Component","constructor","props","saveCompany","e","preventDefault","Console","log","state","name","handleChange","bind","componentDidMount","componentWillUnmount","setState","value","target","render","CompanyStore","companyCount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAIA,WAAaC,OAAb,WAFCF,MAAM,CAAC,cAAD,CAEP,gBADCC,QACD,mBAFA,MAEaC,OAFb,SAE6BJ,KAAK,CAACK,SAFnC,CAE6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBJC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAAL,CAAWC,IAAjC;AACH,KAxBkB;;AAGf,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKR,WAAL,GAAmB,KAAKA,WAAL,CAAiBQ,IAAjB,CAAsB,IAAtB,CAAnB;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB;;AASDH,EAAAA,YAAY,CAACN,CAAD,EAAI;AACZ,SAAKU,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEX,CAAC,CAACY,MAAF,CAASD;AAAjB,KAAd;AACH;;AAGDE,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKhB,KAA5B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcgB,YAAY,CAACC,YAA3B,CADJ,EAGI;AAAM,MAAA,QAAQ,EAAEf,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,IAApC;AAA0C,MAAA,QAAQ,EAAE,KAAKC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAHJ,CADJ;AAWH;;AAjDwC,CAA7C","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { inject, observer } from 'mobx-react'\n\n@inject('CompanyStore')\n@observer\nexport class Company extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.saveCompany = this.saveCompany.bind(this);\n\n    }\n\n    componentDidMount() {\n        \n    }\n  \n    componentWillUnmount() {\n      \n    }\n\n    saveCompany = (e) => {\n        e.preventDefault();\n\n        Console.log(\"called\", this.state.name);\n    }\n \n    \n    handleChange(e) {\n        this.setState({value: e.target.value});\n    }\n\n      \n    render() {\n\n        const {CompanyStore} = this.props;\n\n        return (\n            <div>\n                <h1>Company: {CompanyStore.companyCount}</h1>\n                \n                <form onSubmit={e => this.saveCompany(e)}>\n                    <input type=\"text\" name={this.state.name} onChange={this.handleChange} />\n                    <button>Add Company</button>\n                </form>\n            \n            </div>\n        )\n    }\n}\n  "]},"metadata":{},"sourceType":"module"}