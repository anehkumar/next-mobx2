{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/var/www/html/aneh/next-by-aneh/component/Branch.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { inject, observer } from 'mobx-react';\nexport let Branch = (_dec = inject('CompanyStore'), _dec(_class = observer(_class = (_temp = class Branch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveCompany = e => {\n      e.preventDefault();\n      this.props.CompanyStore.addCompany(this.state.name);\n      this.setState({\n        name: ''\n      });\n    };\n\n    this.state = {\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.saveCompany = this.saveCompany.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      CompanyStore\n    } = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"IN Branch No of company: \", CompanyStore.companyCount), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, CompanyStore.companies.map(company => __jsx(\"li\", {\n      key: company,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, company))));\n  }\n\n}, _temp)) || _class) || _class);","map":{"version":3,"sources":["/var/www/html/aneh/next-by-aneh/component/Branch.js"],"names":["React","Link","inject","observer","Branch","Component","constructor","props","saveCompany","e","preventDefault","CompanyStore","addCompany","state","name","setState","handleChange","bind","componentDidMount","componentWillUnmount","target","value","render","companyCount","companies","map","company"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAIA,WAAaC,MAAb,WAFCF,MAAM,CAAC,cAAD,CAEP,gBADCC,QACD,mBAFA,MAEaC,MAFb,SAE4BJ,KAAK,CAACK,SAFlC,CAE4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBJC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,YAAX,CAAwBC,UAAxB,CAAmC,KAAKC,KAAL,CAAWC,IAA9C;AACA,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KAxBkB;;AAGf,SAAKD,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKT,WAAL,GAAmB,KAAKA,WAAL,CAAiBS,IAAjB,CAAsB,IAAtB,CAAnB;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,oBAAoB,GAAG,CAEtB;;AASDH,EAAAA,YAAY,CAACP,CAAD,EAAI;AACZ,SAAKM,QAAL,CAAc;AAAC,OAACN,CAAC,CAACW,MAAF,CAASN,IAAV,GAAiBL,CAAC,CAACW,MAAF,CAASC;AAA3B,KAAd;AACH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACX,MAAAA;AAAD,QAAiB,KAAKJ,KAA5B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA8BI,YAAY,CAACY,YAA3C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQZ,YAAY,CAACa,SAAb,CAAuBC,GAAvB,CAA2BC,OAAO,IAClC;AAAI,MAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBA,OAAnB,CADA,CAFR,CAFJ,CADJ;AAaH;;AAnDuC,CAA5C","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { inject, observer } from 'mobx-react'\n\n@inject('CompanyStore')\n@observer\nexport class Branch extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.saveCompany = this.saveCompany.bind(this);\n\n    }\n\n    componentDidMount() {\n        \n    }\n  \n    componentWillUnmount() {\n      \n    }\n\n    saveCompany = (e) => {\n        e.preventDefault();\n        this.props.CompanyStore.addCompany(this.state.name);\n        this.setState({name: ''})\n    }\n \n    \n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n      \n    render() {\n\n        const {CompanyStore} = this.props;\n\n        return (\n            <div>\n                <h1>IN Branch No of company: {CompanyStore.companyCount}</h1>\n                <ul>\n                    {\n                        CompanyStore.companies.map(company => (\n                        <li key={company}>{company}</li>\n                        ))\n                    }\n                </ul>\n            \n            </div>\n        )\n    }\n}\n  "]},"metadata":{},"sourceType":"module"}